name: Automated Version Bump and Publish

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: "Version bump type"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write
  packages: write

jobs:
  version-bump-and-publish:
    name: Version Bump and Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build library
        run: npm run build

      - name: Configure Git
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Actions Bot"
          git config --local url."https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"

      - name: Get current version
        id: current_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Bump version
        id: version_bump
        run: |
          NEW_VERSION=$(npm version ${{ github.event.inputs.version_type }} --no-git-tag-version)
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Bumped version from ${{ steps.current_version.outputs.version }} to $NEW_VERSION"

      - name: Generate changes summary
        id: changes
        run: |
          # Get commits since last tag for release notes
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            CHANGES=$(git log --pretty=format:"- %s" --no-merges)
            RELEASE_TYPE="ðŸŽ‰ Initial Release"
          else
            CHANGES=$(git log $LAST_TAG..HEAD --pretty=format:"- %s" --no-merges)
            RELEASE_TYPE="ðŸ“¦ Update"
          fi

          echo "changes<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          echo "release_type<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_TYPE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Commit version bump
        run: |
          git add package.json package-lock.json
          git commit -m "chore: bump version to ${{ steps.version_bump.outputs.new_version }}

          Version: ${{ steps.current_version.outputs.version }} â†’ ${{ steps.version_bump.outputs.new_version }}
          Type: ${{ github.event.inputs.version_type }}

          Automated version bump and publish"

      - name: Create Git tag
        run: |
          git tag ${{ steps.version_bump.outputs.new_version }}

      - name: Push changes and tags
        run: |
          echo "Pushing changes to main branch..."
          git push origin main
          echo "Pushing tag ${{ steps.version_bump.outputs.new_version }}..."
          git push origin ${{ steps.version_bump.outputs.new_version }}
          echo "âœ… Successfully pushed changes and tags!"

      - name: Publish to npm
        run: |
          echo "Publishing to npm..."
          npm publish --access public
          echo "âœ… Successfully published to npm!"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Generate detailed release notes
        run: |
          # Create release notes
          cat > release_notes.md << EOF
          ## ${{ steps.changes.outputs.release_type }}

          ### ðŸ“‹ Changes in this version:
          ${{ steps.changes.outputs.changes }}

          ### ðŸ“¦ Installation:
          \`\`\`bash
          npm install @gthangaraj-fr/react-button-library@${{ steps.version_bump.outputs.new_version }}
          \`\`\`

          ### ðŸ”— Links:
          - [npm Package](https://www.npmjs.com/package/@gthangaraj-fr/react-button-library)
          - [Documentation](https://github.com/${{ github.repository }}/blob/main/README.md)

          ---
          *This release was automatically generated by GitHub Actions*
          EOF

      - name: Create GitHub Release
        run: |
          gh release create ${{ steps.version_bump.outputs.new_version }} \
            --title "Release ${{ steps.version_bump.outputs.new_version }}" \
            --notes-file release_notes.md \
            --latest
          echo "âœ… GitHub release created!"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
