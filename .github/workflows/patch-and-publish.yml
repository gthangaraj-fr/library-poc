name: Patch and Publish

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: "Version bump type"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write
  packages: write

jobs:
  patch-and-publish:
    name: Patch and Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build library
        run: npm run build

      - name: Configure Git
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git config --local url."https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"

      - name: Get current version
        id: current_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Bump version
        id: version_bump
        run: |
          NEW_VERSION=$(npm version ${{ github.event.inputs.version_type }} --no-git-tag-version)
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Bumped version from ${{ steps.current_version.outputs.version }} to $NEW_VERSION"

      - name: Generate changelog
        run: |
          echo "# Changelog" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "## ${{ steps.version_bump.outputs.new_version }} - $(date +'%Y-%m-%d')" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "### Changes" >> CHANGELOG.md

          # Get commits since last tag or from beginning if no tags
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            echo "- Initial release" >> CHANGELOG.md
            git log --pretty=format:"- %s" --no-merges >> CHANGELOG.md
          else
            echo "### Changes since $LAST_TAG" >> CHANGELOG.md
            git log $LAST_TAG..HEAD --pretty=format:"- %s" --no-merges >> CHANGELOG.md
          fi

          echo "" >> CHANGELOG.md
          echo "" >> CHANGELOG.md

          # If changelog already exists, append to it
          if [ -f CHANGELOG_OLD.md ]; then
            tail -n +4 CHANGELOG_OLD.md >> CHANGELOG.md
          fi

      - name: Commit version bump and changelog
        run: |
          mv CHANGELOG.md CHANGELOG_OLD.md 2>/dev/null || true
          mv CHANGELOG_OLD.md CHANGELOG.md
          git add package.json package-lock.json CHANGELOG.md
          git commit -m "chore: bump version to ${{ steps.version_bump.outputs.new_version }} and update changelog"

      - name: Create Git tag
        run: |
          git tag ${{ steps.version_bump.outputs.new_version }}

      - name: Push changes and tags
        run: |
          git push origin main
          git push origin ${{ steps.version_bump.outputs.new_version }}

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version_bump.outputs.new_version }}
          release_name: Release ${{ steps.version_bump.outputs.new_version }}
          body: |
            ## Changes in ${{ steps.version_bump.outputs.new_version }}

            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for detailed changes.

            ### Installation
            ```bash
            npm install @gthangaraj-fr/react-button-library@${{ steps.version_bump.outputs.new_version }}
            ```
          draft: false
          prerelease: false
